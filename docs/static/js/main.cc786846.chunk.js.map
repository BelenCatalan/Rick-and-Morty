{"version":3,"sources":["images/Rick_and_Morty.png","images/nave.png","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/CharacterDetail.js","services/getDataApi.js","components/App.js","index.js","images/2.png"],"names":["module","exports","CharacterCard","props","className","to","character","id","src","image","alt","name","species","CharacterList","characters","length","charactersFilter","dos","map","key","Filters","onSubmit","e","preventDefault","htmlFor","type","placeholder","onChange","ev","handleFilterText","value","target","CharacterDetail","nave","status","renderSpecies","origin","episodes","getDataApi","fetch","then","response","json","data","results","episode","App","useState","setCharacters","setCharactersFilter","useEffect","sort","a","b","filteredCharacters","filter","toLowerCase","includes","logo","exact","path","render","characterId","parseInt","match","params","foundCharacter","find","undefined","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc786846.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/nave.624910a2.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n  return (\n    <li className=\"card__container\">\n      <Link className=\"link__decoration\" to={`/character/${props.character.id}`}>\n        <img className=\"card__image\" src={props.character.image} alt=\"character_name\" />\n        <h4 className=\"card__text--color card__h4\">{props.character.name}</h4>\n        <p className=\"card__text--color card__p\">{props.character.species}</p>\n      </Link>\n    </li>\n  );\n};\n\nCharacterCard.propTypes = {\n  character: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    status: PropTypes.string,\n    species: PropTypes.string,\n    origin: PropTypes.string,\n    image: PropTypes.string,\n    episodes: PropTypes.number,\n  }),\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport PropTypes from 'prop-types';\nimport dos from '../images/2.png';\n\nfunction CharacterList(props) {\n  if (props.characters.length === 0) {\n    return (\n      <div>\n        <p className=\"text__advise\">There isn't any character that matches with: {props.charactersFilter}</p>\n        <img className=\"header__name\" src={dos} alt=\"Rick and Morty\" />\n      </div>\n    );\n  } else {\n    return (\n      <section className=\"section__grid\">\n        <ul className=\"wrapper card__ul\">\n          {props.characters.map((character) => {\n            return <CharacterCard key={character.id} character={character} />;\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\nCharacterList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Filters(props) {\n  const handleInputCharacter = (ev) => {\n    props.handleFilterText({\n      value: ev.target.value,\n      name: ev.target.name,\n    });\n  };\n  const handlerSubmit = (e) => e.preventDefault();\n\n  return (\n    <section className=\"input__style\">\n      <form onSubmit={handlerSubmit} className=\"input__style\">\n        <label className=\"input__style\" htmlFor=\"name\"></label>\n        <input className=\"input__label\" type=\"text\" name=\"character\" id=\"name\" placeholder=\"Character name\" onChange={handleInputCharacter} value={props.charactersFilter} />\n      </form>\n    </section>\n  );\n}\n\nFilters.propTypes = {\n  charactersFilter: PropTypes.string.isRequired,\n  handleFilterText: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import React from 'react';\nimport nave from '../images/nave.png';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction CharacterDetail(props) {\n  function renderSpecies() {\n    switch (props.character.species) {\n      case 'Alien':\n        return (\n          <li>\n            Species: <i className=\"fab fa-reddit-alien\"></i>\n          </li>\n        );\n      case 'Human':\n        return (\n          <li>\n            Species: <i className=\"fas fa-user-alt\"></i>\n          </li>\n        );\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <div className=\"card__content\">\n      <div>\n        <span className=\"card__text\"> </span>\n        <Link to=\"/\">\n          <img className=\"ship__link\" src={nave} alt=\"nave Rick and Morty\" />\n        </Link>\n        <div className=\"content card__div\">\n          <header>\n            <img className=\"detail__image\" src={props.character.image} alt={props.character.name} />\n          </header>\n          <section>\n            <ul className=\"detail__ul card__text\">\n              <li className=\"card__title\">{props.character.name}</li>\n              <li className=\"card__text\">Status: {props.character.status === 'Dead' ? <i className=\"fa fa-skull\"></i> : props.character.status}</li>\n              {renderSpecies()}\n              <li>Origin: {props.character.origin}</li>\n              <li>Episodes:{props.character.episodes}</li>\n            </ul>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}\nCharacterDetail.propTypes = {\n  character: PropTypes.object.isRequired,\n};\n\nexport default CharacterDetail;\n","const getDataApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character/')\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results.map((character) => {\n        return {\n          id: character.id,\n          name: character.name,\n          status: character.status,\n          species: character.species,\n          origin: character.origin.name,\n          image: character.image,\n          episodes: character.episode.length,\n        };\n      });\n    });\n};\nexport default getDataApi;\n\n// en caso de que no la API no estÃ© habilitada o no funcione obtener los datos de aqui:https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\n","import React, { useEffect, useState } from 'react';\nimport '../stylesheets/App.css';\nimport logo from '../images/Rick_and_Morty.png';\nimport dos from '../images/2.png';\nimport CharacterList from './CharacterList';\nimport Filters from './Filters';\nimport CharacterDetails from './CharacterDetail';\nimport getDataApi from '../services/getDataApi';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [charactersFilter, setCharactersFilter] = useState('');\n\n  useEffect(() => {\n    getDataApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  const handleFilterText = (data) => setCharactersFilter(data.value);\n\n  characters.sort(function (a, b) {\n    if (a.name < b.name) return -1;\n    if (a.name > b.name) return 1;\n    return 0;\n  });\n\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toLowerCase().includes(charactersFilter.toLowerCase());\n  });\n\n  const renderCharacterDetails = (props) => {\n    const characterId = parseInt(props.match.params.characterId);\n    const foundCharacter = characters.find((character) => {\n      return character.id === characterId;\n    });\n\n    if (foundCharacter !== undefined) {\n      return <CharacterDetails character={foundCharacter} />;\n    } else {\n      return (\n        <div>\n          <p className=\"text__advise\">The character you are looking for doesn't exist</p>\n          <img className=\"header__name\" src={dos} alt=\"Rick and Morty\" />\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <header>\n        <img className=\"header__name\" src={logo} alt=\"Rick and Morty\" />\n      </header>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters handleFilterText={handleFilterText} charactersFilter={charactersFilter} />\n          <CharacterList characters={filteredCharacters} charactersFilter={charactersFilter} />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetails} />\n      </Switch>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      characterId: PropTypes.string.isRequired,\n    }),\n  }),\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/2.be21436b.png\";"],"sourceRoot":""}